; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
;default_envs = esp32-s3-devkitc-1
default_envs = esp32-s3-devkitc-1-bin
;default_envs = wifi-qr-test

[env]
platform = espressif32@6.4.0
board = esp32-s3-devkitc-1
framework = arduino
monitor_speed = 115200
board_build.f_cpu = 240000000L ; Custom CPU Frequency

board_build.f_flash = 80000000L ; Custom FLASH Frequency
board_build.flash_mode = qio ; Custom FLASH Mode

; if use esp32s3fh4r2
; board_build.arduino.partitions = huge_app.csv # 设置分区表
; board_upload.flash_size = 4MB #FLASH大小

; if use esp32s3r8 or module
board_build.arduino.memory_type = qio_opi ; if use r8_module, please open it!
board_build.arduino.partitions = default_8MB.csv # 设置分区表
board_upload.flash_size = 8MB #FLASH大小

build_unflags = -Os

lib_deps = 
    bblanchon/ArduinoJson@^6.21.2
    lovyan03/LovyanGFX@^1.1.12
    lvgl/lvgl@^8.3.1
    ; Add OTA update libraries for ESP32
    esphome/ESPAsyncWebServer-esphome@^3.0.0
    me-no-dev/AsyncTCP@^1.1.1
    ESP32httpUpdate
    ; WiFi Manager dependencies (using built-in ESP32 libraries)
    ; WebServer and DNSServer are included in ESP32 Arduino Core

; Default environment with PNG format maps
[env:esp32-s3-devkitc-1]
build_flags = 
    ; -DARDUINO_USB_CDC_ON_BOOT=1
    ; -DARDUINO_USB_MODE=1
    
    -O2

    -D BOARD_HAS_PSRAM #用于指示编译器当前的目标设备是否具有 PSRAM
    -mfix-esp32-psram-cache-issue #用于修复 ESP32 上的 PSRAM 缓存一致性问题的编译选项
    
    -D USE_NIMBLE
    ; -DCORE_DEBUG_LEVEL=3

    -D MAP_FORMAT_PNG    # Use PNG format maps (default)
    
    ; LVGL Configuration
    -D LV_CONF_INCLUDE_SIMPLE
    -I lib
    
    ; OTA Configuration
    -D ENABLE_AUTO_OTA_CHECK     # Enable automatic OTA check on boot
    -D OTA_CHECK_INTERVAL=3600   # Check for updates every hour (in seconds)
    -D OTA_SERVER_URL=\"https://jiangalex.github.io/esp32-OffLineMap/firmware\"  # OTA server URL
    -D OTA_VERSION_URL=\"https://jiangalex.github.io/esp32-OffLineMap/firmware/latest_version.txt\"   # Version check URL

; Alternative environment with BIN format maps
[env:esp32-s3-devkitc-1-bin]
build_flags = 
    ; -DARDUINO_USB_CDC_ON_BOOT=1
    ; -DARDUINO_USB_MODE=1
    
    -O2

    -D BOARD_HAS_PSRAM #用于指示编译器当前的目标设备是否具有 PSRAM
    -mfix-esp32-psram-cache-issue #用于修复 ESP32 上的 PSRAM 缓存一致性问题的编译选項
    
    -D USE_NIMBLE
    ; -DCORE_DEBUG_LEVEL=3

    -D MAP_FORMAT_BIN    # Use BIN format maps
    
    ; LVGL Configuration
    -D LV_CONF_INCLUDE_SIMPLE
    -I lib
    
    ; OTA Configuration
    -D ENABLE_AUTO_OTA_CHECK     # Enable automatic OTA check on boot
    -D OTA_CHECK_INTERVAL=3600   # Check for updates every hour (in seconds)
    ;-D OTA_SERVER_URL=\"https://jiangalex.github.io/esp32-OffLineMap/firmware/firmware.bin\"  # OTA firmware URL for BIN format
    -D OTA_SERVER_URL=\"https://jiangalex.github.io/esp32-OffLineMap/firmware/firmware-bin.bin\"  # Original firmware URL
    -D OTA_VERSION_URL=\"https://jiangalex.github.io/esp32-OffLineMap/firmware/latest_version.txt\"   # Version check URL

; MAP FORMAT CONFIGURATION:
; Choose between two environments:
; 1. Default: esp32-s3-devkitc-1 (uses PNG format maps)
; 2. Alternative: esp32-s3-devkitc-1-bin (uses BIN format maps)
; 
; To build with BIN format maps, use:
; pio run -e esp32-s3-devkitc-1-bin
; 
; To upload with BIN format maps, use:
; pio run -e esp32-s3-devkitc-1-bin -t upload
;
; OTA UPDATE CONFIGURATION:
; - ENABLE_AUTO_OTA_CHECK: Enables automatic OTA update checking
; - OTA_CHECK_INTERVAL: Time interval between update checks (seconds)
; - OTA_SERVER_URL: Direct URL to the firmware binary file
; - OTA_VERSION_URL: URL to check current firmware version (supports both JSON and plain text)
; 
; The OTA system supports both JSON and plain text version responses:
; - JSON format: {"version": "1.0.5", "build_date": "2025-10-20T10:30:00Z"}
; - Plain text format: 1.0.5
; 
; Different environments use different firmware files:
; - esp32-s3-devkitc-1: uses firmware-png.bin (PNG format maps)
; - esp32-s3-devkitc-1-bin: uses firmware-bin.bin (BIN format maps)

; WiFi Manager Test Environment
[env:wifi-test]
build_flags = 
    -O2
    -D BOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    
    ; WiFi Manager Test Configuration
    -D WIFI_MANAGER_TEST

lib_deps = 
    ; Only essential libraries for WiFi Manager test

build_src_filter = 
    +<test_wifi_manager.cpp>
    +<App/Utils/WiFiManager/wifi_manager.cpp>
    +<App/Utils/WiFiManager/wifi_manager_html.cpp>
    -<main.cpp>
    -<App/>
    -<ChappieCore/>
    +<App/Utils/WiFiManager/>

; WiFi QR Manager Test Environment
[env:wifi-qr-test]
build_flags = 
    -O2
    -D BOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    
    ; WiFi QR Manager Test Configuration
    -D WIFI_QR_TEST
    
    ; LVGL Configuration for QR Code
    -D LV_CONF_INCLUDE_SIMPLE
    -I lib

lib_deps = 
    ArduinoJson@^6.18.5
    lovyan03/LovyanGFX@^1.1.16
    lvgl/lvgl@^8.3.11
    
    ; Add OTA update libraries for ESP32
    esphome/ESPAsyncWebServer-esphome@^3.0.0
    me-no-dev/AsyncTCP@^1.1.1
    ESP32httpUpdate

build_src_filter = 
    +<test_wifi_qr_manager.cpp>
    +<App/Utils/WiFiManager/wifi_qr_manager.cpp>
    +<ChappieCore/ChappieCore.cpp>
    +<ChappieCore/Lvgl/>
    +<ChappieCore/*/> 
    -<main.cpp>
    -<test_wifi_manager.cpp>
    -<App/Pages/>
    -<App/Common/>
    -<App/Resource/>
    -<App/Utils/DataCenter/>
    -<App/Utils/GPX/>
    -<App/Utils/GPX_Parser/>
    -<App/Utils/MapConv/>
    -<App/Utils/OTA/>
    -<App/Utils/PageManager/>
    -<App/Utils/PointContainer/>
    -<App/Utils/ResourceManager/>
    -<App/Utils/StorageService/>
    -<App/Utils/TileConv/>
    -<App/Utils/Time/>
    -<App/Utils/TonePlayer/>
    -<App/Utils/TrackFilter/>
    -<App/Utils/lv_anim_label/>
    -<App/Utils/lv_ext/>
    -<App/Utils/lv_img_bin/>
    -<App/Utils/lv_poly_line/>
    -<App/App.cpp>

; OTA Version Check Test Environment
[env:ota-test]
build_flags = 
    -O2
    -D BOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    
    ; OTA Version Test Configuration
    -D OTA_VERSION_TEST
    -D ENABLE_AUTO_OTA_CHECK

lib_deps = 
    ArduinoJson@^6.18.5
    ESP32httpUpdate
    me-no-dev/AsyncTCP@^1.1.1

build_src_filter = 
    +<test_ota_version_check.cpp>
    +<App/Utils/OTA/ota_updater.cpp>
    -<main.cpp>
    -<test_wifi_manager.cpp>
    -<test_wifi_qr_manager.cpp>
    -<App/>
    -<ChappieCore/>
    +<App/Utils/OTA/>
